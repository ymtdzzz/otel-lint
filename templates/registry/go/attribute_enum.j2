{%- set version = params.version | camel_case -%}
{{- template.set_file_name("pkg/rule/attributes/" ~ "enum_" ~ version ~ ".go") -}}
// Code generated by otel-lint. DO NOT EDIT.
package attributes

import (
	"github.com/ymtdzzz/otel-lint/pkg/rule"
)

var RulesEnum{{ version }} = []*rule.AttributeRule{
{% for attr in ctx %}
	ruleEnum{{ attr.name | pascal_case }}{{ version }},
{% endfor %}
}

{% for attr in ctx %}
{%- set attr_name = attr.name | pascal_case -%}
var ruleEnum{{ attr_name }}{{ version }} = &rule.AttributeRule{
	Name:         "enum.{{attr.name}}",
	Title:        "{{ attr.brief | trim | replace("\"", "") }}",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "{{ attr.name }}", []string{ "{{ attr.type.members | map(attribute="value") | join('", "') }}" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.{{ attr.stability | map_text("stabilities", "StabilityExperimental") }},
	Source:       "",
  Version:      "{{ params.version }}",
}

{% endfor %}
