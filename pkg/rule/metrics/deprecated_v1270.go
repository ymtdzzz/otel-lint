// Code generated by otel-lint. DO NOT EDIT.
package metrics

import (
	"github.com/ymtdzzz/otel-lint/pkg/rule"
)

var RulesDeprecatedv1270 = []*rule.MetricRule{
	ruleDeprecatedMessagingPublishDurationv1270,
	ruleDeprecatedMessagingReceiveDurationv1270,
	ruleDeprecatedMessagingProcessMessagesv1270,
	ruleDeprecatedMessagingPublishMessagesv1270,
	ruleDeprecatedMessagingReceiveMessagesv1270,
	ruleDeprecatedDbClientConnectionsUsagev1270,
	ruleDeprecatedDbClientConnectionsIdleMaxv1270,
	ruleDeprecatedDbClientConnectionsIdleMinv1270,
	ruleDeprecatedDbClientConnectionsMaxv1270,
	ruleDeprecatedDbClientConnectionsPendingRequestsv1270,
	ruleDeprecatedDbClientConnectionsTimeoutsv1270,
	ruleDeprecatedDbClientConnectionsCreateTimev1270,
	ruleDeprecatedDbClientConnectionsWaitTimev1270,
	ruleDeprecatedDbClientConnectionsUseTimev1270,
	ruleDeprecatedJvmBufferMemoryUsagev1270,
}

var ruleDeprecatedMessagingPublishDurationv1270 = &rule.MetricRule{
	Name:         "deprecated.messaging.publish.duration",
	Title:        "Deprecated. Use `messaging.client.operation.duration` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "messaging.publish.duration") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedMessagingReceiveDurationv1270 = &rule.MetricRule{
	Name:         "deprecated.messaging.receive.duration",
	Title:        "Deprecated. Use `messaging.client.operation.duration` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "messaging.receive.duration") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedMessagingProcessMessagesv1270 = &rule.MetricRule{
	Name:         "deprecated.messaging.process.messages",
	Title:        "Deprecated. Use `messaging.client.consumed.messages` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "messaging.process.messages") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedMessagingPublishMessagesv1270 = &rule.MetricRule{
	Name:         "deprecated.messaging.publish.messages",
	Title:        "Deprecated. Use `messaging.client.produced.messages` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "messaging.publish.messages") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedMessagingReceiveMessagesv1270 = &rule.MetricRule{
	Name:         "deprecated.messaging.receive.messages",
	Title:        "Deprecated. Use `messaging.client.consumed.messages` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "messaging.receive.messages") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsUsagev1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.usage",
	Title:        "Deprecated, use `db.client.connection.count` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.usage") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsIdleMaxv1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.idle.max",
	Title:        "Deprecated, use `db.client.connection.idle.max` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.idle.max") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsIdleMinv1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.idle.min",
	Title:        "Deprecated, use `db.client.connection.idle.min` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.idle.min") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsMaxv1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.max",
	Title:        "Deprecated, use `db.client.connection.max` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.max") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsPendingRequestsv1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.pending_requests",
	Title:        "Deprecated, use `db.client.connection.pending_requests` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.pending_requests") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsTimeoutsv1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.timeouts",
	Title:        "Deprecated, use `db.client.connection.timeouts` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.timeouts") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsCreateTimev1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.create_time",
	Title:        "Deprecated, use `db.client.connection.create_time` instead. Note: the unit also changed from `ms` to `s`.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.create_time") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsWaitTimev1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.wait_time",
	Title:        "Deprecated, use `db.client.connection.wait_time` instead. Note: the unit also changed from `ms` to `s`.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.wait_time") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedDbClientConnectionsUseTimev1270 = &rule.MetricRule{
	Name:         "deprecated.db.client.connections.use_time",
	Title:        "Deprecated, use `db.client.connection.use_time` instead. Note: the unit also changed from `ms` to `s`.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "db.client.connections.use_time") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

var ruleDeprecatedJvmBufferMemoryUsagev1270 = &rule.MetricRule{
	Name:         "deprecated.jvm.buffer.memory.usage",
	Title:        "Deprecated, use `jvm.buffer.memory.used` instead.",
	Check:        func(m *rule.Metrics) bool { return metricNameNot(m, "jvm.buffer.memory.usage") },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
	Version:      "v1.27.0",
}

