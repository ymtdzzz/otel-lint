// Code generated by otel-lint. DO NOT EDIT.
package attributes

import (
	"github.com/ymtdzzz/otel-lint/pkg/rule"
)

var RulesEnumv1260 = []*rule.AttributeRule{
	ruleEnumDbCosmosdbConnectionModev1260,
	ruleEnumDiskIoDirectionv1260,
	ruleEnumFaasTriggerv1260,
	ruleEnumGraphqlOperationTypev1260,
	ruleEnumJvmMemoryTypev1260,
	ruleEnumJvmThreadStatev1260,
	ruleEnumMessagingRocketmqConsumptionModelv1260,
	ruleEnumMessagingRocketmqMessageTypev1260,
	ruleEnumNetworkIoDirectionv1260,
	ruleEnumSystemFilesystemStatev1260,
	ruleEnumSystemNetworkStatev1260,
	ruleEnumSystemPagingDirectionv1260,
	ruleEnumSystemPagingStatev1260,
	ruleEnumSystemPagingTypev1260,
}

var ruleEnumDbCosmosdbConnectionModev1260 = &rule.AttributeRule{
	Name:         "enum.db.cosmosdb.connection_mode",
	Title:        "Cosmos client connection mode.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "db.cosmosdb.connection_mode", []string{ "gateway", "direct" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumDiskIoDirectionv1260 = &rule.AttributeRule{
	Name:         "enum.disk.io.direction",
	Title:        "The disk IO operation direction.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "disk.io.direction", []string{ "read", "write" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumFaasTriggerv1260 = &rule.AttributeRule{
	Name:         "enum.faas.trigger",
	Title:        "Type of the trigger which caused this function invocation.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "faas.trigger", []string{ "datasource", "http", "pubsub", "timer", "other" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumGraphqlOperationTypev1260 = &rule.AttributeRule{
	Name:         "enum.graphql.operation.type",
	Title:        "The type of the operation being executed.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "graphql.operation.type", []string{ "query", "mutation", "subscription" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumJvmMemoryTypev1260 = &rule.AttributeRule{
	Name:         "enum.jvm.memory.type",
	Title:        "The type of memory.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "jvm.memory.type", []string{ "heap", "non_heap" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityStable,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumJvmThreadStatev1260 = &rule.AttributeRule{
	Name:         "enum.jvm.thread.state",
	Title:        "State of the thread.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "jvm.thread.state", []string{ "new", "runnable", "blocked", "waiting", "timed_waiting", "terminated" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityStable,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumMessagingRocketmqConsumptionModelv1260 = &rule.AttributeRule{
	Name:         "enum.messaging.rocketmq.consumption_model",
	Title:        "Model of message consumption. This only applies to consumer spans.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "messaging.rocketmq.consumption_model", []string{ "clustering", "broadcasting" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumMessagingRocketmqMessageTypev1260 = &rule.AttributeRule{
	Name:         "enum.messaging.rocketmq.message.type",
	Title:        "Type of message.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "messaging.rocketmq.message.type", []string{ "normal", "fifo", "delay", "transaction" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumNetworkIoDirectionv1260 = &rule.AttributeRule{
	Name:         "enum.network.io.direction",
	Title:        "The network IO operation direction.",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "network.io.direction", []string{ "transmit", "receive" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumSystemFilesystemStatev1260 = &rule.AttributeRule{
	Name:         "enum.system.filesystem.state",
	Title:        "The filesystem state",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "system.filesystem.state", []string{ "used", "free", "reserved" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumSystemNetworkStatev1260 = &rule.AttributeRule{
	Name:         "enum.system.network.state",
	Title:        "A stateless protocol MUST NOT set this attribute",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "system.network.state", []string{ "close", "close_wait", "closing", "delete", "established", "fin_wait_1", "fin_wait_2", "last_ack", "listen", "syn_recv", "syn_sent", "time_wait" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumSystemPagingDirectionv1260 = &rule.AttributeRule{
	Name:         "enum.system.paging.direction",
	Title:        "The paging access direction",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "system.paging.direction", []string{ "in", "out" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumSystemPagingStatev1260 = &rule.AttributeRule{
	Name:         "enum.system.paging.state",
	Title:        "The memory paging state",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "system.paging.state", []string{ "used", "free" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

var ruleEnumSystemPagingTypev1260 = &rule.AttributeRule{
	Name:         "enum.system.paging.type",
	Title:        "The memory paging type",
	Check:        func(sa *rule.SignalAttributes) bool { return valueValidEnum(sa, "system.paging.type", []string{ "major", "minor" }) },
	Severity:     rule.SeverityError,
	Stability:    rule.StabilityExperimental,
	Source:       "",
  Version:      "v1.26.0",
}

